
20210110

* set the collector scan time to 15 seconds :
in application.properties, set this value :

# Collector schedule (required)
# github.cron=0 0/5 * * * *
github.cron=0/15 * * * * *

cCronSequenceGenerator is used. explaination of the expression is here :
https://www.baeldung.com/cron-expressions


* run jenkins collector in docker 

sudo docker run -e SKIP_PROPERTIES_BUILDER=true -v /home/ubuntu/hygieia-build-jenkins-collector/sap:/hygieia/config jenkins-collector

20210109

* run jenkins collector (failed)

cd hygieia-build-jenkins-collector/target
java -jar jenkins-build-collector.jar --spring.config.name=jenkins --spring.config.location=/home/ubuntu/hygieia-build-jenkins-collector/sap/application.properties

* jenkins docker :
http://localhost:49001/
admin
1cd102a98d9c4dcb8fa88cdded63709c

* solve github not showing data issue in new UI 
- find the entry for the dashboard in mongo collection 'components'
- copy the SCM definition from a working dashboard

"SCM" : [ 
            {
                "_id" : ObjectId("5fd2602202743900081693fe"),
                "enabled" : true,
                "errors" : [ 
                    {
                        "errorCode" : "Unreachable",
                        "errorMessage" : "https://github.com/sophieyu258/hupeidong_sap",
                        "timestamp" : NumberLong(1608162044356)
                    }
                ],
                "pushed" : false,
                "collectorId" : ObjectId("5fc9daec46e0fb00062b5798"),
                "lastUpdated" : NumberLong(1608161702456),
                "options" : {
                    "password" : "",
                    "personalAccessToken" : "ERROR",
                    "branch" : "master",
                    "userID" : "",
                    "url" : "https://github.com/sophieyu258/hupeidong_sap"
                }
            }
        ],

- use mongo GUI tool Robo 3T, add the SCM to the "collectorItems" of the dashboard using 'Edit Document'
		
https://github.com/peidong-hu/api.git
21d38d28e69157b5cf4e9c290825b5395a681957		

20210107

http://localhost:4200/api/commit/?componentId=5ff20106a12c26abe28bfed2&numberOfDays=14
http://localhost:4200/api/gitrequests/type/pull/state/all/?componentId=5ff20106a12c26abe28bfed2&numberOfDays=14
http://localhost:4200/api/gitrequests/type/issue/state/all/?componentId=5ff20106a12c26abe28bfed2&numberOfDays=14


http://localhost:4200/api/collector/item/type/searchField/Deployment?search=de&searchField=description&size=20
20210102

http://localhost:3000/api/dashboard/5fe6c30a7b36681873b9ea81

20201227

* Repo widget (github)

http://localhost:3000/api/collector/collectorId/5fcbf3e0bac0c374b78b60cc
http://localhost:3000/api/encrypt/
http://localhost:3000/api/collector/item
http://localhost:3000/api/dashboard/5fe6c30a7b36681873b9ea81/widget/5fe8d56f7b36685109409cad
http://localhost:3000/api/commit?componentId=5fe6c30a7b36681873b9ea80&numberOfDays=14
http://localhost:3000/api/gitrequests/type/pull/state/all?componentId=5fe6c30a7b36681873b9ea80&numberOfDays=14
http://localhost:3000/api/collector/item/component/5fe6c30a7b36681873b9ea80?type=scm

https://api.github.com/repos/sophieyu258/hupeidong_sap/commits?sha=master&since=2020-12-27T15:42Z

* pineline tab

http://localhost:3000/api/deploy/status/5fe6c30a7b36681873b9ea80



20201226

* In Chrome's Network tab, filter log with 'api'

http://localhost:3000/api/dashboard/5fe6c30a7b36681873b9ea81
http://localhost:3000/api/score/metric/5fe6c30a7b36681873b9ea81
http://localhost:3000/api/collector/item/type/deployment?page=0&size=20&sort=description

20201223

new UI

https://github.com/Hygieia/UI/blob/master/README.md

20201221

* Fork API to my own repo

https://github.com/sophieyu258/api.git

* Mock API

20201220

* 'Hygieia Server URL' must not add last /. e.g., http://172.20.0.3:8080/api

* In a Build job, add 'Post-build Actions', then the 'Hygieia publisher settings' will appear

* it seems udeploy or xldeploy is required?


20201219

* Manage Jenkins -> Config Jenkins -> Global Hygieia Publisher Settings
* After config the above page, use 'Test Connection'

traceroute
ip addr

sudo docker inspect a3f84d46c3b0 -f "{{json .NetworkSettings.Networks }}"

* run jenkins on host IP so that it can access hygieia api

sudo docker run --network host --name jenkins-hello -d -v $PWD/jenkins:/var/jenkins_home -t jenkins/jenkins

http://localhost:8080
http://10.0.2.15:8080
admin
9c2b87cea8e14e3aa7ac3cb09c85fbdd


20201218

* https://github.com/Hygieia/Hygieia/issues/1175

Current pipeline configuration widget allows to choose the environments for DEV, QA,INT,PERF,..etc. Environment drop down will be populated with the values from deploy widget (if using uDeploy collector or Hygieia Jenkins publisher data will be pushed to deploy widget)

* Install Hygieia-Jenkins Plugin

https://github.com/Hygieia/Hygieia/blob/gh-pages/pages/hygieia/hygieia-jenkins-plugin/hygieia-jenkins-plugin.md

** 'mvn test' fails! 

Google said 'we still get some issues with java 10, prefer java 8 to build/run jenkins in the meantime'

** Install java 8. jdk are installed in /usr/lib/jvm

sudo apt install openjdk-8-jdk-headless

export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/

env | grep JAVA

'mvn test' succeed!

** mvn clean package

hygieia-publisher.hpi generated

** install plugin in jenkins

Manage Jenkins -> Manage Plugins -> Advanced -> Upload plugin

** restart jenkins

localhost:49001/restart





20201217

* Try Hygieia Executive 

git clone https://github.com/Hygieia/ExecDashboard.git

** db setup

https://hygieia.github.io/ExecDashboard/EXECDatabase_Setup.html

> use analyticsdb
> db.createUser(
            {
              user: "dashboarduser",
              pwd: "dbpassword",
              roles: [
              {role: "readWrite", db: "analyticsdb"}
              ]
            })
			
Error: couldn't add user: Use of SCRAM-SHA-256 requires undigested passwords

> db.createUser( {
              user: "dashboarduser",
              pwd: "dbpassword",
              roles: [
              {role: "readWrite", db: "analyticsdb"}
              ],
			  mechanisms:[  "SCRAM-SHA-1" ]     })

成功！

** ExeDashboard setup

cd ExeDashboard
mvn clean install
sudo docker-compose up


20201216 

pipeline

score

cloud

20201215

* restart the services : just use 

sudo docker start 

20201213 

* Run jenkins-collector in IntelliJ
** copy the source code to another folder, e.g., /home/ubuntu/mytest/hygieia-build-jenkins-collector
** open project in IntelliJ from the above folder. VCS seems causing problem if we use project in the git repo
** put application.properties in that folder too, since it is the default working directory

* 
* put breakpoints in DefaultHudsonClient.java
** can get REST call url like :

http://172.17.0.1:49001/job/MavenTest1/17/api/json?tree=number,url,timestamp,duration,building,result,culprits[fullName],changeSets[items[user,author[fullName],revision,id,msg,timestamp,date,paths[file]],kind],changeSet[items[user,author[fullName],revision,id,msg,timestamp,date,paths[file]],kind,revisions[module,revision]],actions[lastBuiltRevision[SHA1,branch[SHA1,name]],remoteUrls]


20201210

* Run complete hygieia using docker-compose

user1 / 123456

github token

35a99406953e4654f82030cb5f0a3027030319a1

* history |grep github-collector

git clone https://github.com/Hygieia/hygieia-scm-github-collector.git
cd hygieia-scm-github-collector/
sudo docker build -t github-collector .
sudo docker run -e SKIP_PROPERTIES_BUILDER=true -v /home/ubuntu/hygieia-scm-github-collector/sap:/hygieia/config github-collector

* build jenkins docker image

git clone https://github.com/Hygieia/hygieia-build-jenkins-collector.git
cd hygieia-build-jenkins-collector/
sudo mvn install
sudo docker build -t jenkins-collector .
sudo docker run -e SKIP_PROPERTIES_BUILDER=true -v /home/ubuntu/hygieia-build-jenkins-collector/sap:/hygieia/config jenkins-collector

** jenkins build graph成功！
Notice:
'Jenkins'->'Dashboard'->'configuration'->'Jenkins Location(Jenkins URL)' must be the same as that in application.properties : 
jenkins.servers[0]=http://172.17.0.1:49001




20201209

* 成功的方法

entre jenkins container, and install maven there. Then don't use Jenkinsfile, use 'FreeStyle' project, and 'mvn package'

* Build a maven project using Jenkins

https://www.jenkins.io/doc/tutorials/build-a-java-app-with-maven/

https://github.com/sophieyu258/simple-java-maven-app.git

** Install Docker plugins in 'Dashboard'->'Manage Jenkins'->'Manage Plugins'

sudo docker run -d -p 49002:8080 --privileged -t jenkins/jenkins

sudo docker container exec -it d100400b7b2b bash

** enter docker container as root :

sudo docker container exec -it -u root d100400b7b2b bash

49002
admin
4a162a8cfa8349d38d26857c683562cd



* 查看cpu类型

sudo lshw | grep -i cpu



20201208 

* 成功的安装jenkins docker :

https://wiki.jenkins.io/display/JENKINS//Installing+Jenkins+with+Docker

sudo docker run -d -p 49001:8080 -t jenkins/jenkins

admin
7885269622cd404397ff725c73c72d5b
apiToken(key) : 1165e8fa5f10b75348a59d3336821154e3

* Install/run jenkins in docker :

https://www.jenkins.io/doc/book/installing/docker/

sudo docker run --name jenkins-docker --rm --detach \
  --privileged --network jenkins --network-alias docker \
  --env DOCKER_TLS_CERTDIR=/certs \
  --volume jenkins-docker-certs:/certs/client \
  --volume jenkins-data:/var/jenkins_home \
  --publish 2376:2376 docker:dind
  
  sudo docker run --name jenkins-docker --rm --detach   --privileged --network jenkins --network-alias docker   --env DOCKER_TLS_CERTDIR=/certs   --volume jenkins-docker-certs:/certs/client   --volume jenkins-data:/var/jenkins_home -p 8888:8080  --publish 2376:2376 docker:dind

** enter docker container :

sudo docker container exec -it jenkins-docker sh

** find docker container's listening ports :

docker inspect -f '{{.State.Pid}}'
126181
sudo nsenter -t 126181 -n netstat
sudo nsenter -t 126181 -n ss -ltpn




20201205

Working on ubuntu-VirtualBox-sap

ubuntu , pw : ubuntu

* Install IntelliJ IDEA on Ubuntu
** Just search and Install IntelliJ IDEA from the Software Center

* Debug Hygieia API projedt
** Open/Import the maven project
** Choose 'Run' or 'Debug', in config, select 'Application', and choose OpenJDK
** Choose 'Main class' as 'com.capitalone.dashboard.Application'
** Choose Debug'Application', then the API project is running and can be debugged

* API calls classes and functions in hygieia-core project
* I want to be able to debug the core code too
** make a copy of api folder api_hb
** 


20201129

* Install/run Hygieia

https://www.cnblogs.com/duanxz/p/9909213.html

** Install maven
sudo apt install maven

** npm
Seems npm already exists

** MongoDB
*** check ubuntu version:
lsb_release -a
*** Install MongoDB Community Edition on Ubuntu

https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/

or (ubuntu package):

sudo apt update
sudo apt upgrade
sudo apt install mongodb

** Install Hygieia API

https://hygieia.github.io/Hygieia/api.html

git clone https://github.com/Hygieia/api.git
cd api
mvn install
cd target
java -jar api.jar

The last command is the most simple version of:

java -jar api.jar --spring.config.location=C:\[path to api.properties file] -Djasypt.encryptor.password=hygieiasecret

It runs the api with no api.properties and uses all default values. Then open in browser to check it's running :   

localhost:8080/api/ping


** Install Github collector

https://github.com/Hygieia/hygieia-scm-github-collector

git clone https://github.com/Hygieia/hygieia-scm-github-collector.git
cd hygieia-scm-github-collector
mvn install
cd target

Need to config the properties file, otherwise it will throw exceptions : (to be done later)
java -jar [collector name].jar --spring.config.name=github --spring.config.location=[path to application.properties file]

* Run github collector
** put the application.properties file in hygieia/hygieia-scm-github-collector/target
** java -jar github-scm-collector.jar


** Install Hygieia UI 

https://github.com/Hygieia/UI

git clone https://github.com/Hygieia/UI.git
cd UI
npm install
sudo npm install -g @angular/cli@8.0.3
ng version
(
output :

Angular CLI: 8.0.3
Node: 14.15.1
OS: linux x64
Angular: undefined
... 

Package                      Version
------------------------------------------------------
@angular-devkit/architect    0.800.3 (cli-only)
@angular-devkit/core         8.0.3 (cli-only)
@angular-devkit/schematics   8.0.3 (cli-only)
@schematics/angular          8.0.3 (cli-only)
@schematics/update           0.800.3 (cli-only)

)
sudo npm install -g gulp
gulp -v
npm install gulp --save-dev
gulp build

->get 'No gulpfile found' error

*** try another repo : 

git clone https://github.com/Hygieia/Hygieia.git
npm install
npm install gulp --save-dev
gulp build

-> get "ReferenceError: primordials is not defined" error

Use the method in this article to fix the above error:
https://timonweb.com/javascript/how-to-fix-referenceerror-primordials-is-not-defined-error/

In the same directory where you have package.json create an npm-shrinkwrap.json file with the following contents:

{
  "dependencies": {
    "graceful-fs": {
        "version": "4.2.2"
     }
  }
}

gulp serve

works!





